unit UnitValorCache;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, StdCtrls, Buttons, jpeg;

type
  TFormValorCache = class(TForm)
    Image1: TImage;
    BitBtnCalcular: TBitBtn;
    BitBtnSair: TBitBtn;
    BitBtnLimpar: TBitBtn;
    Label3: TLabel;
    EditQuantidade: TEdit;
    procedure BitBtnSairClick(Sender: TObject);
    procedure BitBtnLimparClick(Sender: TObject);
    procedure BitBtnCalcularClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

  Function CalculaCache(QtdTorcedores:Integer):Real;  //Declaração da função

var
  FormValorCache: TFormValorCache;
  Cache:Real; //Declaração de variaveis Universais do form
  QuantidadeTorcedores:Integer; //Declaração de variaveis Universais do form

implementation

{$R *.dfm}

Function CalculaCache(QtdTorcedores:Integer):Real; //Função para calculo do cachê
Var Cach:Real;
Begin
  If (QtdTorcedores<=3000) Then
    Cach:=10*QtdTorcedores //Efetua Calculo do cachê até 3000
  Else If (QtdTorcedores<=15000) Then
    Cach:=15*QtdTorcedores  //Efetua Calculo do cachê entre 3001 de 15000
  Else If (QtdTorcedores<=80000) Then
    Cach:=18*QtdTorcedores //Efetua Calculo do cachê entre 15001 de 80000
  Else
    Cach:=20*QtdTorcedores; //Efetua Calculo do cachê acima de 80000
  Result:=Cach;  //Retorna o resultado
end;

procedure TFormValorCache.BitBtnSairClick(Sender: TObject);
begin
  Close; //Fecha o formulario
end;

procedure TFormValorCache.BitBtnLimparClick(Sender: TObject);
begin
  EditQuantidade.Clear;  //Limpa o Edit
  EditQuantidade.SetFocus; //Coloca a seleção no Edit
end;

procedure TFormValorCache.BitBtnCalcularClick(Sender: TObject);
begin
  Try     //tratamento de erro parte 1
    QuantidadeTorcedores:=StrToInt(EditQuantidade.Text); //Se o campo estiver preenchido copia os dados do Edit para a variavel QuantidadeTorcedores
  Except  //tratamento de erro parte 2
    ShowMessage('Digite um valor válido!'); //Se o campo não estiver preenchido apresenta uma menssagem  de erro
    EditQuantidade.Clear;  //Limpa o Edit
    EditQuantidade.SetFocus; //Coloca a seleção no Edit
    Exit; // Aborta o Procedimento
  end;    //tratamento de erro parte 3
  Cache:=CalculaCache(QuantidadeTorcedores);  //Executa a função com o valor da variavel QuantidadeTorcedores
  ShowMessage('Valor do Cachê: R$ '+FloatToStrF(Cache,ffnumber,15,2)); //Apresenta uma menssagem com o resultado
  EditQuantidade.Clear;  //Limpa o Edit
  EditQuantidade.SetFocus; //Coloca a seleção no Edit
end;

procedure TFormValorCache.FormCreate(Sender: TObject);
begin
  Cache:=0.0;  //Inicia a Variavel Zerada
end;

procedure TFormValorCache.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  EditQuantidade.Clear;  //Limpa o Edit
  EditQuantidade.SetFocus; //Coloca a seleção no Edit
end;

end.
